{"ast":null,"code":"var _jsxFileName = \"E:\\\\University\\\\fyp\\\\new\\\\housing-properties\\\\src\\\\component\\\\Chart.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, AreaSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport { scalePoint } from 'd3-scale';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  year: '2016',\n  area: 67225,\n  price: 46598,\n  location: 1545\n}, {\n  year: '2017',\n  area: 179873,\n  price: 90560,\n  location: 54545\n}, {\n  year: '2018',\n  area: 310088,\n  price: 118848,\n  location: 87245\n}, {\n  year: '2019',\n  area: 439318,\n  price: 189924,\n  location: 41448\n}, {\n  year: '2020',\n  area: 439380,\n  price: 189998,\n  location: 41485\n}];\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px'\n  }\n};\nconst legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n};\n\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column'\n  }\n};\n\nconst ChartRootBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Chart.Root, { ...restProps,\n  className: classes.chart\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n\n_c = ChartRootBase;\n\nconst LegendRootBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Root, { ...restProps,\n  className: classes.root\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n\n_c2 = LegendRootBase;\n\nconst LegendLabelBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Label, { ...restProps,\n  className: classes.label\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c3 = LegendLabelBase;\n\nconst LegendItemBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Item, { ...restProps,\n  className: classes.item\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 3\n}, this);\n\n_c4 = LegendItemBase;\nconst ChartRoot = withStyles(chartRootStyles, {\n  name: 'ChartRoot'\n})(ChartRootBase);\nconst LegendRoot = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(LegendRootBase);\nconst LegendLabel = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(LegendLabelBase);\nconst LegendItem = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(LegendItemBase);\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        rootComponent: ChartRoot,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentScale, {\n          factory: scalePoint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AreaSeries, {\n          name: \"Area\",\n          valueField: \"area\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AreaSeries, {\n          name: \"Price\",\n          valueField: \"price\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AreaSeries, {\n          name: \"Location\",\n          valueField: \"location\",\n          argumentField: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: LegendRoot,\n          itemComponent: LegendItem,\n          labelComponent: LegendLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Graph Generated According to Data Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ChartRootBase\");\n$RefreshReg$(_c2, \"LegendRootBase\");\n$RefreshReg$(_c3, \"LegendLabelBase\");\n$RefreshReg$(_c4, \"LegendItemBase\");","map":{"version":3,"sources":["E:/University/fyp/new/housing-properties/src/component/Chart.js"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","AreaSeries","Title","Legend","ArgumentScale","Animation","scalePoint","withStyles","data","year","area","price","location","chartRootStyles","chart","paddingRight","legendStyles","root","display","margin","flexDirection","legendLabelStyles","theme","label","paddingTop","spacing","legendItemStyles","item","ChartRootBase","classes","restProps","LegendRootBase","LegendLabelBase","LegendItemBase","ChartRoot","name","LegendRoot","LegendLabel","LegendItem","Demo","PureComponent","constructor","props","state","render","chartData"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  AreaSeries,\r\n  Title,\r\n  Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\n\r\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\nimport { scalePoint } from 'd3-scale';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst data = [\r\n  { year: '2016', area: 67225, price: 46598 , location: 1545},\r\n  { year: '2017', area: 179873, price: 90560, location: 54545 },\r\n  { year: '2018', area: 310088, price: 118848, location: 87245 },\r\n  { year: '2019', area: 439318, price: 189924, location: 41448 },\r\n  { year: '2020', area: 439380, price: 189998, location: 41485 },\r\n\r\n];\r\n\r\nconst chartRootStyles = {\r\n  chart: {\r\n    paddingRight: '20px',\r\n  },\r\n};\r\nconst legendStyles = {\r\n  root: {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n};\r\nconst legendLabelStyles = theme => ({\r\n  label: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n});\r\nconst legendItemStyles = {\r\n  item: {\r\n    flexDirection: 'column',\r\n  },\r\n};\r\n\r\nconst ChartRootBase = ({ classes, ...restProps }) => (\r\n  <Chart.Root {...restProps} className={classes.chart} />\r\n);\r\nconst LegendRootBase = ({ classes, ...restProps }) => (\r\n  <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst LegendLabelBase = ({ classes, ...restProps }) => (\r\n  <Legend.Label {...restProps} className={classes.label} />\r\n);\r\nconst LegendItemBase = ({ classes, ...restProps }) => (\r\n  <Legend.Item {...restProps} className={classes.item} />\r\n);\r\nconst ChartRoot = withStyles(chartRootStyles, { name: 'ChartRoot' })(ChartRootBase);\r\nconst LegendRoot = withStyles(legendStyles, { name: 'LegendRoot' })(LegendRootBase);\r\nconst LegendLabel = withStyles(legendLabelStyles, { name: 'LegendLabel' })(LegendLabelBase);\r\nconst LegendItem = withStyles(legendItemStyles, { name: 'LegendItem' })(LegendItemBase);\r\n\r\nexport default class Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={chartData}\r\n          rootComponent={ChartRoot}\r\n        >\r\n          <ArgumentScale factory={scalePoint} />\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <AreaSeries\r\n            name=\"Area\"\r\n            valueField=\"area\"\r\n            argumentField=\"year\"\r\n          />\r\n          <AreaSeries\r\n            name=\"Price\"\r\n            valueField=\"price\"\r\n            argumentField=\"year\"\r\n          />\r\n          <AreaSeries\r\n            name=\"Location\"\r\n            valueField=\"location\"\r\n            argumentField=\"year\"\r\n          />\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={LegendRoot}\r\n            itemComponent={LegendItem}\r\n            labelComponent={LegendLabel}\r\n          />\r\n          <Title\r\n            text=\"Graph Generated According to Data Table\"\r\n          />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}